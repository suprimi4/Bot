spring:
  application:
    name: crud
  datasource:
    driverClassName: org.postgresql.Driver
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  kafka:
    bootstrap-servers: localhost:9092,localhost:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      group-id: back-events
      properties:
        spring:
          json:
            trusted:
              packages: "com.suprimi4.events"
    topic: "bot-command-topic"



  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    enabled: true
    change-log: db.changelog/db.changelog-master.yaml
dadata:
  client:
    token: ${DADATA_TOKEN}
    secret: ${DADATA_SECRET}
  api-url: ${DADATA_URL}
openrouteservice:
  api:
    key: ${ROUTE_KEY}
    url: ${ROUTE_URL}
telegram:
  bot:
    token: ${TELEGRAM_BOT_TOKEN}
logging:
  level:
    org:
      springframework:
        web: DEBUG
management:
  server:
    port: 8078
  endpoints:
    web:
      exposure:
        include: health, prometheus, info
  metrics:
    tags:
      application: ${spring.application.name}

api:
  secret:
    ${API_SECRET}
---
spring:
  config:
    activate:
      on-profile: default
  datasource:
    url: jdbc:postgresql://localhost:5433/${DB_NAME}

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://db:5432/${DB_NAME}

---
spring:
  config:
    activate:
      on-profile: minikube
  datasource:
    url: jdbc:postgresql://host.minikube.internal:5433/${DB_NAME}

